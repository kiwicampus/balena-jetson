#!/bin/sh
set -o errexit

# Script which writes the appropriate
# device tree with embedded cmdline
# and updates the kernel, as well as
# the rest of the bootloader binaries

. /usr/libexec/os-helpers-fs

partspec="/resin-boot/bootfiles/partition_specification194.txt"
new_part=$(findmnt --noheadings --canonicalize --output SOURCE "/mnt/sysroot/inactive" -t ext4)

info_log()
{
    echo "[INFO] $@"
}

info_log "New partition is ${new_part}"

rootstr=$(get_dev_label "${new_part}")
rootl=""

update_needed() {
    current_update_file=${1}
    device=${2}
    update_size=$(ls -al $current_update_file | awk '{print $5}')
    update_md5sum=$(md5sum $current_update_file | awk '{print $1'})
    existing_md5sum=$(dd if=$device bs=1 count=$update_size status=none | md5sum | awk '{print $1}')

    if [ ! "$existing_md5sum" = "$update_md5sum" ]; then
        echo 1
    else
        echo 0
    fi
}

case "$rootstr" in
    *resin-rootA*)
        rootl="A"
        ;;
    *resin-rootB*)
        rootl="B"
        ;;
    *)
        rootl="Undefined"
        ;;
esac

info_log "New root is resin-root${rootl}"

dtbname=$(cat "$partspec" | grep "kernel-dtb_b" | cut -d ':' -f 2 | awk -F'_sigheader' '{print $1}')
dtbfile="${dtbname}-root${rootl}_sigheader.dtb.encrypt"
kernel="boot_sigheader.img.encrypt"

partitions=$(cat "${partspec}")
for n in ${partitions}; do
    part_name=$(echo $n | cut -d ':' -f 1)
    file_name=$(echo $n | cut -d ':' -f 2)

    if [ -z "${part_name##*kernel*}" ] || [ -z "${part_name##*bootloader-dtb*}" ] || [ $file_name = "none.bin" ]; then
        continue
    fi

    file_path=$(get_state_path_from_label $part_name)

    if [ "x$file_path" = "x" ]; then
        continue
    fi

    src="/resin-boot/bootfiles/$file_name"
    dst="$file_path"

    if [ $(update_needed $src $dst) -eq 1 ]; then
        info_log "Will update ${dst}..."
        dd if=${src} of=${dst}
        dd if=${src} of="${dst}_b"
    else
        info_log "No need to update ${dst}"
    fi
done

# root is contained in the dtb cmdline, needs to be updated to switch rootfs
info_log "Writing ${dtbfile} to specific partitions..."
dd if=/resin-boot/bootfiles/${dtbfile} of=$(get_state_path_from_label "bootloader-dtb")
dd if=/resin-boot/bootfiles/${dtbfile} of=$(get_state_path_from_label "bootloader-dtb_b")
dd if=/resin-boot/bootfiles/${dtbfile} of=$(get_state_path_from_label "kernel-dtb")
dd if=/resin-boot/bootfiles/${dtbfile} of=$(get_state_path_from_label "kernel-dtb_b")

info_log "Writing kernel ${kernel} to specific partitions..."

dd if=/resin-boot/bootfiles/${kernel}  of=$(get_state_path_from_label "kernel")
dd if=/resin-boot/bootfiles/${kernel}  of=$(get_state_path_from_label "kernel_b")

info_log "Updating boot image on hw partition mmcblk0boot0..."

echo 0 > /sys/block/mmcblk0boot0/force_ro
dd if=/resin-boot/bootfiles/boot0.img of=/dev/mmcblk0boot0
sync
echo 1 > /sys/block/mmcblk0boot0/force_ro

info_log "Done."
